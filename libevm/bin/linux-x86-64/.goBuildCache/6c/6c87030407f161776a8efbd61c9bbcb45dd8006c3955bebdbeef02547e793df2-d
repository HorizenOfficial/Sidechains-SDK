//go:cgo_ldflag "-g"
//go:cgo_ldflag "-O2"
// Code generated by cmd/cgo; DO NOT EDIT.

package rpc

import "unsafe"

import _ "runtime/cgo"

import "syscall"

var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype_int int32

//go:notinheap
type _Ctype_void_notinheap struct{}

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})

//go:cgo_import_static _cgo_0fc0545fb81a_Cfunc_max_socket_path_size
//go:linkname __cgofn__cgo_0fc0545fb81a_Cfunc_max_socket_path_size _cgo_0fc0545fb81a_Cfunc_max_socket_path_size
var __cgofn__cgo_0fc0545fb81a_Cfunc_max_socket_path_size byte
var _cgo_0fc0545fb81a_Cfunc_max_socket_path_size = unsafe.Pointer(&__cgofn__cgo_0fc0545fb81a_Cfunc_max_socket_path_size)

//go:cgo_unsafe_args
func _Cfunc_max_socket_path_size() (r1 _Ctype_int) {
	_cgo_runtime_cgocall(_cgo_0fc0545fb81a_Cfunc_max_socket_path_size, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
