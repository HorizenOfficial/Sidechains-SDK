//go:cgo_ldflag "-g"
//go:cgo_ldflag "-O2"
// Code generated by cmd/cgo; DO NOT EDIT.

package main

import "unsafe"

import _ "runtime/cgo"

import "syscall"

var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
type _Ctype__GoString_ string

type _Ctype_char int8

type _Ctype_int int32

type _Ctype_intgo = _Ctype_ptrdiff_t

type _Ctype_long int64

type _Ctype_ptrdiff_t = _Ctype_long

//go:notinheap
type _Ctype_void_notinheap struct{}

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
func _cgoCheckResult(interface{})


func _Cfunc_CString(s string) *_Ctype_char {
	p := _cgo_cmalloc(uint64(len(s)+1))
	pp := (*[1<<30]byte)(p)
	copy(pp[:], s)
	pp[len(s)] = 0
	return (*_Ctype_char)(p)
}

//go:linkname _cgo_runtime_gostring runtime.gostring
func _cgo_runtime_gostring(*_Ctype_char) string

func _Cfunc_GoString(p *_Ctype_char) string {
	return _cgo_runtime_gostring(p)
}
//go:cgo_import_static _cgo_39420889eb4c_Cfunc_free
//go:linkname __cgofn__cgo_39420889eb4c_Cfunc_free _cgo_39420889eb4c_Cfunc_free
var __cgofn__cgo_39420889eb4c_Cfunc_free byte
var _cgo_39420889eb4c_Cfunc_free = unsafe.Pointer(&__cgofn__cgo_39420889eb4c_Cfunc_free)

//go:cgo_unsafe_args
func _Cfunc_free(p0 unsafe.Pointer) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_39420889eb4c_Cfunc_free, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_39420889eb4c_Cfunc_invokeCallbackProxy
//go:linkname __cgofn__cgo_39420889eb4c_Cfunc_invokeCallbackProxy _cgo_39420889eb4c_Cfunc_invokeCallbackProxy
var __cgofn__cgo_39420889eb4c_Cfunc_invokeCallbackProxy byte
var _cgo_39420889eb4c_Cfunc_invokeCallbackProxy = unsafe.Pointer(&__cgofn__cgo_39420889eb4c_Cfunc_invokeCallbackProxy)

//go:cgo_unsafe_args
func _Cfunc_invokeCallbackProxy(p0 _Ctype_int, p1 *_Ctype_char) (r1 *_Ctype_char) {
	_cgo_runtime_cgocall(_cgo_39420889eb4c_Cfunc_invokeCallbackProxy, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_export_dynamic SetupLogging
//go:linkname _cgoexp_39420889eb4c_SetupLogging _cgoexp_39420889eb4c_SetupLogging
//go:cgo_export_static _cgoexp_39420889eb4c_SetupLogging
func _cgoexp_39420889eb4c_SetupLogging(a *struct {
		p0 int
		p1 *_Ctype_char
	}) {
	SetupLogging(a.p0, a.p1)
}
//go:cgo_export_dynamic Invoke
//go:linkname _cgoexp_39420889eb4c_Invoke _cgoexp_39420889eb4c_Invoke
//go:cgo_export_static _cgoexp_39420889eb4c_Invoke
func _cgoexp_39420889eb4c_Invoke(a *struct {
		p0 *_Ctype_char
		p1 *_Ctype_char
		r0 *_Ctype_char
	}) {
	a.r0 = Invoke(a.p0, a.p1)
	_cgoCheckResult(a.r0)
}

//go:cgo_import_static _cgo_39420889eb4c_Cfunc__Cmalloc
//go:linkname __cgofn__cgo_39420889eb4c_Cfunc__Cmalloc _cgo_39420889eb4c_Cfunc__Cmalloc
var __cgofn__cgo_39420889eb4c_Cfunc__Cmalloc byte
var _cgo_39420889eb4c_Cfunc__Cmalloc = unsafe.Pointer(&__cgofn__cgo_39420889eb4c_Cfunc__Cmalloc)

//go:linkname runtime_throw runtime.throw
func runtime_throw(string)

//go:cgo_unsafe_args
func _cgo_cmalloc(p0 uint64) (r1 unsafe.Pointer) {
	_cgo_runtime_cgocall(_cgo_39420889eb4c_Cfunc__Cmalloc, uintptr(unsafe.Pointer(&p0)))
	if r1 == nil {
		runtime_throw("runtime: C malloc failed")
	}
	return
}
