scorex {
    dataDir = /tmp/scorex/data/blockchain
    logDir = /tmp/scorex/data/log

    logInfo {
       logFileName = "debugLog.txt"
       # levels (case insensitive): OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE, ALL
       logFileLevel = "all"
       logConsoleLevel = "error"
    }

    restApi {
        bindAddress = "127.0.0.1:9085"
        apiKeyHash = ""
        timeout = 5s
    }

    network {
        nodeName = "testNode1"
        bindAddress = "127.0.0.1:9084"
        knownPeers = []
        agentName = "2-Hop"
    }

    websocket {
      address = "ws://localhost:8888"
      connectionTimeout = 100 milliseconds
      reconnectionDelay = 1 seconds
      reconnectionMaxAttempts = 1
      wsServer = true
      wsServerPort = 0
    }

    withdrawalEpochCertificate {
        submitterIsEnabled = false
        certificateSigningIsEnabled = true
        signersPublicKeys = ["", "", "", "", "", "", ""]
        signersThreshold = 5
        signersSecrets = ["", "", "", "", "", "", ""]
        maxPks = 7
        certProvingKeyFilePath = "/tmp/scorex/data/marlin_snark_pk"
        certVerificationKeyFilePath = "/tmp/scorex/data/marlin_snark_vk"
        certificateAutomaticFeeComputation = true
    }

    csw {
        cswProvingKeyFilePath = "/tmp/scorex/data/csw_marlin_snark_pk"
        cswVerificationKeyFilePath = "/tmp/scorex/data/csw_marlin_snark_vk"
    }

    wallet {
        seed = "sidechain_seed_0"
        genesisSecrets = ["", ""]
    }

    forger {
        automaticForging = false
    }

	genesis {
        scGenesisBlockHex = ""
        scId = ""
        powData = ""
        mcBlockHeight = 420
        mcNetwork = testnet
        withdrawalEpochLength = 900
        initialCumulativeCommTreeHash = ""
    }
}