{
	"openrpc": "1.2.4",
	"info": {
		"title": "Ethereum JSON-RPC Specification",
		"description": "A specification of the interface for Ethereum clients with additional custom methods.",
		"license": {
			"name": "CC0-1.0",
			"url": "https://creativecommons.org/publicdomain/zero/1.0/legalcode"
		},
		"version": "1.2.4"
	},
	"methods": [
		{
			"name": "zen_getForwardTransfers",
			"description": "This is Horizen specific",
			"summary": "Returns a list of forward transfers contained in the block",
			"params": [
				{
					"name": "Block",
					"required": true,
					"schema": {
						"title": "Block number or block hash",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block hash",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						]
					}
				}
			],
			"result": {
				"name": "List of forward transfers",
				"schema": {
					"title": "Forward transfers",
					"type": "object",
					"properties": {
						"to": {
							"title": "hex encoded address",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"value": {
							"title": "hex encoded value in wei.",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						}
					}
				}
			}
		},
		{
			"name": "zen_getFeePayments",
			"description": "This is Horizen specific",
			"summary": "Returns a list of fee payments in the block",
			"params": [
				{
					"name": "Block",
					"required": true,
					"schema": {
						"title": "Block number or block hash",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block hash",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						]
					}
				}
			],
			"result": {
				"name": "List of fee payments",
				"schema": {
					"title": "Fee payments",
					"type": "object",
					"properties": {
						"address": {
							"title": "hex encoded address",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"value": {
							"title": "hex encoded value in wei",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						}
					}
				}
			}
		},
		{
			"name": "debug_traceBlockByNumber",
			"summary": "Replays the block that is already present in the database",
			"params": [
				{
					"name": "Block",
					"required": true,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				},
				{
					"name": "Tracer configuration",
					"schema": {
						"type": "object",
						"required": [
							"enableMemory",
							"disableStack",
							"disableStorage",
							"enableReturnData"
						],
						"properties": {
							"enableMemory": {
								"type": "boolean"
							},
							"disableStack": {
								"type": "boolean"
							},
							"disableStorage": {
								"type": "boolean"
							},
							"enableReturnData": {
								"type": "boolean"
							}
						}
					}
				}
			],
			"result": {
				"name": "List of transaction traces in the block",
				"schema": {
					"type": "object",
					"properties": {
						"gas": {
							"title": "hex encoded gas",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"returnValue": {
							"title": "hex encoded return value",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"structLogs": {
							"title": "List of EVM trace logs",
							"type": "object",
							"properties": {
								"pc": {
									"title": "hex encoded pc",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"op": {
									"title": "string op code",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "hex encoded gas",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gasCost": {
									"title": "hex encoded gasCost",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"depth": {
									"title": "hex encoded depth",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"error": {
									"title": "string error",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"stack": {
									"title": "string array with stack data",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								},
								"memory": {
									"title": "string array with memory data",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								},
								"storage": {
									"title": "string array with storage data",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								}
							}
						}
					}
				}
			}
		},
		{
			"name": "debug_traceCall",
			"summary": "Runs an eth_call within the context of the given block execution",
			"params": [
				{
					"name": "Transaction call object",
					"required": true,
					"schema": {
						"type": "object",
						"title": "Transaction object generic to all types",
						"required": [
							"to"
						],
						"properties": {
							"type": {
								"title": "type",
								"type": "string",
								"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
							},
							"nonce": {
								"title": "nonce",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"to": {
								"title": "to address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"from": {
								"title": "from address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"gas": {
								"title": "gas limit",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"value": {
								"title": "value",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"input": {
								"title": "input data",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							"gasPrice": {
								"title": "gas price",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The gas price willing to be paid by the sender in wei"
							},
							"maxPriorityFeePerGas": {
								"title": "max priority fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
							},
							"maxFeePerGas": {
								"title": "max fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
							},
							"accessList": {
								"title": "accessList",
								"type": "array",
								"description": "EIP-2930 access list - will be ignored",
								"items": {
									"title": "Access list entry",
									"type": "object",
									"properties": {
										"address": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9,a-f,A-F]{40}$"
										},
										"storageKeys": {
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
											}
										}
									}
								}
							},
							"chainId": {
								"title": "chainId",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Chain ID that this transaction is valid on."
							}
						}
					}
				},
				{
					"name": "Block",
					"required": true,
					"schema": {
						"title": "Block number, block hash or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							},
							{
								"title": "Block hash",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						]
					}
				},
				{
					"name": "Tracer configuration",
					"schema": {
						"type": "object",
						"required": [
							"enableMemory",
							"disableStack",
							"disableStorage",
							"enableReturnData"
						],
						"properties": {
							"enableMemory": {
								"type": "boolean"
							},
							"disableStack": {
								"type": "boolean"
							},
							"disableStorage": {
								"type": "boolean"
							},
							"enableReturnData": {
								"type": "boolean"
							}
						}
					}
				}
			],
			"result": {
				"name": "List of transaction traces in the block",
				"schema": {
					"type": "object",
					"properties": {
						"gas": {
							"title": "hex encoded gas",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"returnValue": {
							"title": "hex encoded return value",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"structLogs": {
							"title": "List of EVM trace logs",
							"type": "object",
							"properties": {
								"pc": {
									"title": "hex encoded pc",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"op": {
									"title": "string op code",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "hex encoded gas",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gasCost": {
									"title": "hex encoded gasCost",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"depth": {
									"title": "hex encoded depth",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"error": {
									"title": "string error",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"stack": {
									"title": "string array with stack data",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								},
								"memory": {
									"title": "string array with memory data",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								},
								"storage": {
									"title": "string array with storage data",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								}
							}
						}
					}
				}
			}
		},
		{
			"name": "debug_traceTransaction",
			"summary": "Replays the transaction that is already present in the database",
			"params": [
				{
					"name": "transactionHash",
					"required": true,
					"schema": {
						"title": "transaction hash",
						"type": "string",
						"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
					}
				},
				{
					"name": "Tracer configuration",
					"schema": {
						"type": "object",
						"required": [
							"enableMemory",
							"disableStack",
							"disableStorage",
							"enableReturnData"
						],
						"properties": {
							"enableMemory": {
								"type": "boolean"
							},
							"disableStack": {
								"type": "boolean"
							},
							"disableStorage": {
								"type": "boolean"
							},
							"enableReturnData": {
								"type": "boolean"
							}
						}
					}
				}
			],
			"result": {
				"name": "List of transaction traces",
				"schema": {
					"gas": {
						"title": "hex encoded gas",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					},
					"returnValue": {
						"title": "hex encoded return value",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					},
					"structLogs": {
						"title": "List of EVM trace logs",
						"type": "object",
						"properties": {
							"pc": {
								"title": "hex encoded pc",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"op": {
								"title": "string op code",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"gas": {
								"title": "hex encoded gas",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"gasCost": {
								"title": "hex encoded gasCost",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"depth": {
								"title": "hex encoded depth",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"error": {
								"title": "string error",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"stack": {
								"title": "string array with stack data",
								"type": "array",
								"items": {
									"title": "32 byte hex value",
									"type": "string",
									"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
								}
							},
							"memory": {
								"title": "string array with memory data",
								"type": "array",
								"items": {
									"title": "32 byte hex value",
									"type": "string",
									"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
								}
							},
							"storage": {
								"title": "string array with storage data",
								"type": "array",
								"items": {
									"title": "32 byte hex value",
									"type": "string",
									"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
								}
							}
						}
					}
				}
			}
		},
		{
			"name": "web3_clientVersion",
			"summary": "Returns the client version",
			"params": [],
			"result": {
				"name": "Client version",
				"schema": {
					"title": "Current client version in string format",
					"type": "string"
				}
			}
		},
		{
			"name": "net_peerCount",
			"summary": "Returns number of peers currently connected to the client",
			"params": [],
			"result": {
				"name": "Peer count",
				"schema": {
					"title": "hex encoded unsigned integer of the number of connected peers",
					"type": "string",
					"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
				}
			}
		},
		{
			"name": "net_listening",
			"summary": "Returns true if client is actively listening for network connections",
			"params": [],
			"result": {
				"name": "Listening",
				"schema": {
					"title": "boolean - true when listening, otherwise false",
					"type": "boolean",
					"pattern": "false / true"
				}
			}
		},
		{
			"name": "net_version",
			"summary": "Returns the current network id",
			"params": [],
			"result": {
				"name": "Network Id",
				"schema": {
					"title": "String value of current network id",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_protocolVersion",
			"description": "It is not implemented, yet and needs to be decided if it will be.",
			"summary": "Returns the current ethereum protocol version",
			"params": [],
			"result": {
				"name": "Protocol version",
				"schema": {
					"title": "hex encoded unsigned integer of current ethereum protocol version",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_getBlockByHash",
			"summary": "Returns information about a block by hash.",
			"params": [
				{
					"name": "Block hash",
					"required": true,
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
					}
				},
				{
					"name": "Hydrated transactions",
					"required": true,
					"schema": {
						"title": "hydrated",
						"type": "boolean"
					}
				}
			],
			"result": {
				"name": "Block information",
				"schema": {
					"title": "Block object",
					"type": "object",
					"required": [
						"parentHash",
						"sha3Uncles",
						"miner",
						"stateRoot",
						"transactionsRoot",
						"receiptsRoot",
						"logsBloom",
						"number",
						"gasLimit",
						"gasUsed",
						"timestamp",
						"extraData",
						"mixHash",
						"nonce",
						"size",
						"transactions",
						"uncles"
					],
					"properties": {
						"parentHash": {
							"title": "Parent block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"sha3Uncles": {
							"description": "not included, returns 0x",
							"title": "Ommers hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"miner": {
							"title": "Coinbase",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"stateRoot": {
							"title": "State root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionsRoot": {
							"title": "Transactions root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"receiptsRoot": {
							"title": "Receipts root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"logsBloom": {
							"title": "Bloom filter",
							"type": "string",
							"pattern": "^0x[0-9a-f]{512}$"
						},
						"difficulty": {
							"description": "not included",
							"title": "Difficulty",
							"type": "string",
							"pattern": "^0x[0-9a-f]*$"
						},
						"number": {
							"title": "Number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"gasLimit": {
							"title": "Gas limit",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"gasUsed": {
							"title": "Gas used",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"timestamp": {
							"title": "Timestamp",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"extraData": {
							"description": "not included, returns 0x",
							"title": "Extra data",
							"type": "string",
							"pattern": "^0x[0-9a-f]*$"
						},
						"mixHash": {
							"description": "not included, returns 0x",
							"title": "Mix hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"nonce": {
							"description": "not included, returns 0x",
							"title": "Nonce",
							"type": "string",
							"pattern": "^0x[0-9a-f]{16}$"
						},
						"totalDifficulty": {
							"description": "not included",
							"title": "Total difficult",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"baseFeePerGas": {
							"title": "Base fee per gas",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"size": {
							"title": "Block size",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"transactions": {
							"anyOf": [
								{
									"title": "Transaction hashes",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								},
								{
									"title": "Full transactions",
									"type": "array",
									"items": {
										"oneOf": [
											{
												"title": "Signed 1559 Transaction",
												"type": "object",
												"required": [
													"accessList",
													"chainId",
													"gas",
													"input",
													"maxFeePerGas",
													"maxPriorityFeePerGas",
													"nonce",
													"r",
													"s",
													"type",
													"value",
													"yParity"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"maxPriorityFeePerGas": {
														"title": "max priority fee per gas",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
													},
													"maxFeePerGas": {
														"title": "max fee per gas",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
													},
													"accessList": {
														"title": "accessList",
														"type": "array",
														"description": "EIP-2930 access list",
														"items": {
															"title": "Access list entry",
															"type": "object",
															"properties": {
																"address": {
																	"title": "hex encoded address",
																	"type": "string",
																	"pattern": "^0x[0-9,a-f,A-F]{40}$"
																},
																"storageKeys": {
																	"type": "array",
																	"items": {
																		"title": "32 byte hex value",
																		"type": "string",
																		"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
																	}
																}
															}
														}
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"yParity": {
														"title": "yParity",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											},
											{
												"title": "Signed 2930 Transaction",
												"type": "object",
												"required": [
													"accessList",
													"chainId",
													"gas",
													"gasPrice",
													"input",
													"nonce",
													"r",
													"s",
													"type",
													"value",
													"yParity"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"gasPrice": {
														"title": "gas price",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The gas price willing to be paid by the sender in wei"
													},
													"accessList": {
														"title": "accessList",
														"type": "array",
														"description": "EIP-2930 access list - not included - always empty",
														"items": {
															"title": "Access list entry",
															"type": "object",
															"properties": {
																"address": {
																	"title": "hex encoded address",
																	"type": "string",
																	"pattern": "^0x[0-9,a-f,A-F]{40}$"
																},
																"storageKeys": {
																	"type": "array",
																	"items": {
																		"title": "32 byte hex value",
																		"type": "string",
																		"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
																	}
																}
															}
														}
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"yParity": {
														"title": "yParity",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											},
											{
												"title": "Signed Legacy Transaction",
												"type": "object",
												"required": [
													"gas",
													"gasPrice",
													"input",
													"nonce",
													"r",
													"s",
													"type",
													"v",
													"value"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"gasPrice": {
														"title": "gas price",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The gas price willing to be paid by the sender in wei"
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"v": {
														"title": "v",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											}
										]
									}
								}
							]
						},
						"uncles": {
							"description": "not included",
							"title": "Uncles",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						}
					}
				}
			}
		},
		{
			"name": "eth_getBlockByNumber",
			"summary": "Returns information about a block by number.",
			"params": [
				{
					"name": "Block",
					"required": true,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				},
				{
					"name": "Hydrated transactions",
					"required": true,
					"schema": {
						"title": "hydrated",
						"type": "boolean"
					}
				}
			],
			"result": {
				"name": "Block information",
				"schema": {
					"title": "Block object",
					"type": "object",
					"required": [
						"parentHash",
						"sha3Uncles",
						"miner",
						"stateRoot",
						"transactionsRoot",
						"receiptsRoot",
						"logsBloom",
						"number",
						"gasLimit",
						"gasUsed",
						"timestamp",
						"extraData",
						"mixHash",
						"nonce",
						"size",
						"transactions",
						"uncles"
					],
					"properties": {
						"parentHash": {
							"title": "Parent block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"sha3Uncles": {
							"description": "not included, returns 0x",
							"title": "Ommers hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"miner": {
							"title": "Coinbase",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"stateRoot": {
							"title": "State root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionsRoot": {
							"title": "Transactions root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"receiptsRoot": {
							"title": "Receipts root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"logsBloom": {
							"title": "Bloom filter",
							"type": "string",
							"pattern": "^0x[0-9a-f]{512}$"
						},
						"difficulty": {
							"description": "not included",
							"title": "Difficulty",
							"type": "string",
							"pattern": "^0x[0-9a-f]*$"
						},
						"number": {
							"title": "Number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"gasLimit": {
							"title": "Gas limit",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"gasUsed": {
							"title": "Gas used",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"timestamp": {
							"title": "Timestamp",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"extraData": {
							"description": "not included, returns 0x",
							"title": "Extra data",
							"type": "string",
							"pattern": "^0x[0-9a-f]*$"
						},
						"mixHash": {
							"description": "not included, returns 0x",
							"title": "Mix hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"nonce": {
							"description": "not included, returns 0x",
							"title": "Nonce",
							"type": "string",
							"pattern": "^0x[0-9a-f]{16}$"
						},
						"totalDifficulty": {
							"description": "not included",
							"title": "Total difficult",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"baseFeePerGas": {
							"title": "Base fee per gas",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"size": {
							"title": "Block size",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"transactions": {
							"anyOf": [
								{
									"title": "Transaction hashes",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									}
								},
								{
									"title": "Full transactions",
									"type": "array",
									"items": {
										"oneOf": [
											{
												"title": "Signed 1559 Transaction",
												"type": "object",
												"required": [
													"accessList",
													"chainId",
													"gas",
													"input",
													"maxFeePerGas",
													"maxPriorityFeePerGas",
													"nonce",
													"r",
													"s",
													"type",
													"value",
													"yParity"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"maxPriorityFeePerGas": {
														"title": "max priority fee per gas",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
													},
													"maxFeePerGas": {
														"title": "max fee per gas",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
													},
													"accessList": {
														"title": "accessList",
														"type": "array",
														"description": "EIP-2930 access list - not included - always empty",
														"items": {
															"title": "Access list entry",
															"type": "object",
															"properties": {
																"address": {
																	"title": "hex encoded address",
																	"type": "string",
																	"pattern": "^0x[0-9,a-f,A-F]{40}$"
																},
																"storageKeys": {
																	"type": "array",
																	"items": {
																		"title": "32 byte hex value",
																		"type": "string",
																		"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
																	}
																}
															}
														}
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"yParity": {
														"title": "yParity",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											},
											{
												"title": "Signed 2930 Transaction",
												"type": "object",
												"required": [
													"accessList",
													"chainId",
													"gas",
													"gasPrice",
													"input",
													"nonce",
													"r",
													"s",
													"type",
													"value",
													"yParity"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"gasPrice": {
														"title": "gas price",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The gas price willing to be paid by the sender in wei"
													},
													"accessList": {
														"title": "accessList",
														"type": "array",
														"description": "EIP-2930 access list - not included - always empty",
														"items": {
															"title": "Access list entry",
															"type": "object",
															"properties": {
																"address": {
																	"title": "hex encoded address",
																	"type": "string",
																	"pattern": "^0x[0-9,a-f,A-F]{40}$"
																},
																"storageKeys": {
																	"type": "array",
																	"items": {
																		"title": "32 byte hex value",
																		"type": "string",
																		"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
																	}
																}
															}
														}
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"yParity": {
														"title": "yParity",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											},
											{
												"title": "Signed Legacy Transaction",
												"type": "object",
												"required": [
													"gas",
													"gasPrice",
													"input",
													"nonce",
													"r",
													"s",
													"type",
													"v",
													"value"
												],
												"properties": {
													"type": {
														"title": "type",
														"type": "string",
														"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
													},
													"nonce": {
														"title": "nonce",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"to": {
														"title": "to address",
														"type": "string",
														"pattern": "^0x[0-9,a-f,A-F]{40}$"
													},
													"gas": {
														"title": "gas limit",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"value": {
														"title": "value",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"input": {
														"title": "input data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"gasPrice": {
														"title": "gas price",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "The gas price willing to be paid by the sender in wei"
													},
													"chainId": {
														"title": "chainId",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
														"description": "Chain ID that this transaction is valid on."
													},
													"v": {
														"title": "v",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"r": {
														"title": "r",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"s": {
														"title": "s",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											}
										]
									}
								}
							]
						},
						"uncles": {
							"title": "Uncles",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						}
					}
				}
			}
		},
		{
			"name": "eth_getBlockTransactionCountByHash",
			"summary": "Returns the number of transactions in a block from a block matching the given block hash.",
			"params": [
				{
					"name": "Block hash",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
					}
				}
			],
			"result": {
				"name": "Transaction count",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_getBlockTransactionCountByNumber",
			"summary": "Returns the number of transactions in a block matching the given block number.",
			"params": [
				{
					"name": "Block",
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Transaction count",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_chainId",
			"summary": "Returns the chain ID of the current network.",
			"params": [],
			"result": {
				"name": "Chain ID",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_syncing",
			"summary": "Returns an object with data about the sync status or false.",
			"params": [],
			"result": {
				"name": "Syncing status",
				"schema": {
					"title": "Syncing status",
					"oneOf": [
						{
							"title": "Syncing progress",
							"type": "object",
							"properties": {
								"startingBlock": {
									"title": "Starting block",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"currentBlock": {
									"title": "Current block",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"highestBlock": {
									"title": "Highest block",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						},
						{
							"title": "Not syncing",
							"description": "Should always return false if not syncing.",
							"type": "boolean"
						}
					]
				}
			}
		},
		{
			"name": "eth_accounts",
			"summary": "Returns a list of addresses owned by client.",
			"params": [],
			"result": {
				"name": "Accounts",
				"schema": {
					"title": "Accounts",
					"type": "array",
					"items": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				}
			}
		},
		{
			"name": "eth_blockNumber",
			"summary": "Returns the number of most recent block.",
			"params": [],
			"result": {
				"name": "Block number",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_call",
			"summary": "Executes a new message call immediately without creating a transaction on the block chain.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"schema": {
						"type": "object",
						"title": "Transaction object generic to all types",
						"properties": {
							"type": {
								"title": "type",
								"type": "string",
								"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
							},
							"nonce": {
								"title": "nonce",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"to": {
								"title": "to address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"from": {
								"title": "from address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"gas": {
								"title": "gas limit",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"value": {
								"title": "value",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"input": {
								"title": "input data",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							"gasPrice": {
								"title": "gas price",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The gas price willing to be paid by the sender in wei"
							},
							"maxPriorityFeePerGas": {
								"title": "max priority fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
							},
							"maxFeePerGas": {
								"title": "max fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
							},
							"accessList": {
								"title": "accessList",
								"type": "array",
								"description": "EIP-2930 access list - will be ignored",
								"items": {
									"title": "Access list entry",
									"type": "object",
									"properties": {
										"address": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9,a-f,A-F]{40}$"
										},
										"storageKeys": {
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
											}
										}
									}
								}
							},
							"chainId": {
								"title": "chainId",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Chain ID that this transaction is valid on."
							}
						}
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Return data",
				"schema": {
					"title": "hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]*$"
				}
			}
		},
		{
			"name": "eth_estimateGas",
			"summary": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"schema": {
						"type": "object",
						"title": "Transaction object generic to all types",
						"properties": {
							"type": {
								"title": "type",
								"type": "string",
								"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
							},
							"nonce": {
								"title": "nonce",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"to": {
								"title": "to address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"from": {
								"title": "from address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"gas": {
								"title": "gas limit",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"value": {
								"title": "value",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"input": {
								"title": "input data",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							"gasPrice": {
								"title": "gas price",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The gas price willing to be paid by the sender in wei"
							},
							"maxPriorityFeePerGas": {
								"title": "max priority fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
							},
							"maxFeePerGas": {
								"title": "max fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
							},
							"accessList": {
								"title": "accessList",
								"type": "array",
								"description": "EIP-2930 access list - not supported",
								"items": {
									"title": "Access list entry",
									"type": "object",
									"properties": {
										"address": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9,a-f,A-F]{40}$"
										},
										"storageKeys": {
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
											}
										}
									}
								}
							},
							"chainId": {
								"title": "chainId",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Chain ID that this transaction is valid on."
							}
						}
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Gas used",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_gasPrice",
			"summary": "Returns the current price per gas in wei.",
			"params": [],
			"result": {
				"name": "Gas price",
				"schema": {
					"title": "Gas price",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_maxPriorityFeePerGas",
			"summary": "Returns the current maxPriorityFeePerGas per gas in wei.",
			"params": [],
			"result": {
				"name": "Max priority fee per gas",
				"schema": {
					"title": "Max priority fee per gas",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_feeHistory",
			"summary": "Transaction fee history",
			"description": "Returns transaction base fee per gas and effective priority fee per gas for the requested/supported block range.",
			"params": [
				{
					"name": "blockCount",
					"description": "Requested range of blocks. Clients will return less than the requested range if not all blocks are available.",
					"required": true,
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				},
				{
					"name": "newestBlock",
					"description": "Highest block of the requested range.",
					"required": true,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				},
				{
					"name": "rewardPercentiles",
					"description": "A monotonically increasing list of percentile values. For each block in the requested range, the transactions will be sorted in ascending order by effective tip per gas and the coresponding effective tip for the percentile will be determined, accounting for gas consumed.",
					"required": true,
					"schema": {
						"title": "rewardPercentiles",
						"type": "array",
						"items": {
							"title": "rewardPercentile",
							"description": "Floating point value between 0 and 100.",
							"type": "number"
						}
					}
				}
			],
			"result": {
				"name": "feeHistoryResult",
				"description": "Fee history for the returned block range. This can be a subsection of the requested range if not all blocks are available.",
				"schema": {
					"title": "feeHistoryResults",
					"description": "Fee history results.",
					"type": "object",
					"required": [
						"oldestBlock",
						"baseFeePerGas",
						"gasUsedRatio"
					],
					"properties": {
						"oldestBlock": {
							"title": "oldestBlock",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
							"description": "Lowest number block of returned range."
						},
						"baseFeePerGas": {
							"title": "baseFeePerGasArray",
							"description": "An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.",
							"type": "array",
							"items": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							}
						},
						"reward": {
							"title": "rewardArray",
							"description": "A two-dimensional array of effective priority fees per gas at the requested block percentiles.",
							"type": "array",
							"items": {
								"title": "rewardPercentile",
								"description": "An array of effective priority fee per gas data points from a single block. All zeroes are returned if the block is empty.",
								"type": "array",
								"items": {
									"title": "rewardPercentile",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "A given percentile sample of effective priority fees per gas from a single block in ascending order, weighted by gas used. Zeroes are returned if the block is empty."
								}
							}
						}
					}
				}
			}
		},
		{
			"name": "eth_newFilter",
			"description": "It is not implemented, yet, but will be.",
			"summary": "Creates a filter object, based on filter options, to notify when the state changes (logs).",
			"params": [
				{
					"name": "Filter",
					"schema": {
						"title": "filter",
						"type": "object",
						"properties": {
							"fromBlock": {
								"title": "from block",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"toBlock": {
								"title": "to block",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"address": {
								"title": "Address(es)",
								"oneOf": [
									{
										"title": "Address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									{
										"title": "Addresses",
										"type": "array",
										"items": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9,a-f,A-F]{40}$"
										}
									}
								]
							},
							"topics": {
								"title": "Topics",
								"type": "array",
								"items": {
									"title": "Filter Topic List Entry",
									"oneOf": [
										{
											"title": "Any Topic Match",
											"type": "null"
										},
										{
											"title": "Single Topic Match",
											"type": "string",
											"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
										},
										{
											"title": "Multiple Topic Match",
											"type": "array",
											"items": {
												"title": "32 hex encoded bytes",
												"type": "string",
												"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
											}
										}
									]
								}
							}
						}
					}
				}
			],
			"result": {
				"name": "Filter Identifier",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_newBlockFilter",
			"description": "It is not implemented, yet, but will be.",
			"summary": "Creates a filter in the node, to notify when a new block arrives.",
			"params": [],
			"result": {
				"name": "Filter Identifier",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_newPendingTransactionFilter",
			"description": "It is not implemented, yet, but will be.",
			"summary": "Creates a filter in the node, to notify when new pending transactions arrive.",
			"params": [],
			"result": {
				"name": "Filter Identifier",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_uninstallFilter",
			"description": "It is not implemented, yet, but will be.",
			"summary": "Uninstalls a filter with given id.",
			"params": [
				{
					"name": "Filter Identifier",
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			],
			"result": {
				"name": "Success",
				"schema": {
					"type": "boolean"
				}
			}
		},
		{
			"name": "eth_getFilterChanges",
			"description": "It is not implemented, yet, but will be.",
			"summary": "Polling method for a filter, which returns an array of logs which occurred since last poll.",
			"params": [
				{
					"name": "Filter Identifier",
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			],
			"result": {
				"name": "Log objects",
				"schema": {
					"title": "Filter results",
					"oneOf": [
						{
							"title": "new block hashes",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						},
						{
							"title": "new transaction hashes",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						},
						{
							"title": "new logs",
							"type": "array",
							"items": {
								"title": "log",
								"type": "object",
								"required": [
									"transactionHash"
								],
								"properties": {
									"removed": {
										"title": "removed",
										"type": "boolean"
									},
									"logIndex": {
										"title": "log index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionIndex": {
										"title": "transaction index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionHash": {
										"title": "transaction hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockHash": {
										"title": "block hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockNumber": {
										"title": "block number",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"address": {
										"title": "address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"data": {
										"title": "data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"topics": {
										"title": "topics",
										"type": "array",
										"items": {
											"title": "32 hex encoded bytes",
											"type": "string",
											"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
										}
									}
								}
							}
						}
					]
				}
			}
		},
		{
			"name": "eth_getFilterLogs",
			"description": "It is not implemented, yet, but will be.",
			"summary": "Returns an array of all logs matching filter with given id.",
			"params": [
				{
					"name": "Filter Identifier",
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			],
			"result": {
				"name": "Log objects",
				"schema": {
					"title": "Filter results",
					"oneOf": [
						{
							"title": "new block hashes",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						},
						{
							"title": "new transaction hashes",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						},
						{
							"title": "new logs",
							"type": "array",
							"items": {
								"title": "log",
								"type": "object",
								"required": [
									"transactionHash"
								],
								"properties": {
									"removed": {
										"title": "removed",
										"type": "boolean"
									},
									"logIndex": {
										"title": "log index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionIndex": {
										"title": "transaction index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionHash": {
										"title": "transaction hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockHash": {
										"title": "block hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockNumber": {
										"title": "block number",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"address": {
										"title": "address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"data": {
										"title": "data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"topics": {
										"title": "topics",
										"type": "array",
										"items": {
											"title": "32 hex encoded bytes",
											"type": "string",
											"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
										}
									}
								}
							}
						}
					]
				}
			}
		},
		{
			"name": "eth_getLogs",
			"summary": "Returns an array of all logs matching filter with given id.",
			"params": [
				{
					"name": "Filter",
					"schema": {
						"title": "filter",
						"type": "object",
						"properties": {
							"fromBlock": {
								"title": "from block",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"toBlock": {
								"title": "to block",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"address": {
								"title": "Address(es)",
								"oneOf": [
									{
										"title": "Address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									{
										"title": "Addresses",
										"type": "array",
										"items": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9,a-f,A-F]{40}$"
										}
									}
								]
							},
							"topics": {
								"title": "Topics",
								"type": "array",
								"items": {
									"title": "Filter Topic List Entry",
									"oneOf": [
										{
											"title": "Any Topic Match",
											"type": "null"
										},
										{
											"title": "Single Topic Match",
											"type": "string",
											"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
										},
										{
											"title": "Multiple Topic Match",
											"type": "array",
											"items": {
												"title": "32 hex encoded bytes",
												"type": "string",
												"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
											}
										}
									]
								}
							}
						}
					}
				}
			],
			"result": {
				"name": "Log objects",
				"schema": {
					"title": "Filter results",
					"oneOf": [
						{
							"title": "new block hashes",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						},
						{
							"title": "new transaction hashes",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
							}
						},
						{
							"title": "new logs",
							"type": "array",
							"items": {
								"title": "log",
								"type": "object",
								"required": [
									"transactionHash"
								],
								"properties": {
									"removed": {
										"title": "removed",
										"type": "boolean"
									},
									"logIndex": {
										"title": "log index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionIndex": {
										"title": "transaction index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionHash": {
										"title": "transaction hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockHash": {
										"title": "block hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockNumber": {
										"title": "block number",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"address": {
										"title": "address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"data": {
										"title": "data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"topics": {
										"title": "topics",
										"type": "array",
										"items": {
											"title": "32 hex encoded bytes",
											"type": "string",
											"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
										}
									}
								}
							}
						}
					]
				}
			}
		},
		{
			"name": "eth_sign",
			"summary": "Returns an EIP-191 signature over the provided data.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				},
				{
					"name": "Message",
					"required": true,
					"schema": {
						"title": "hex encoded bytes",
						"type": "string",
						"pattern": "^0x[0-9a-f]*$"
					}
				}
			],
			"result": {
				"name": "Signature",
				"schema": {
					"title": "65 hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]{512}$"
				}
			}
		},
		{
			"name": "eth_signTransaction",
			"summary": "Returns an RLP encoded transaction signed by the specified account.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"schema": {
						"type": "object",
						"title": "Transaction object generic to all types",
						"properties": {
							"type": {
								"title": "type",
								"type": "string",
								"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
							},
							"nonce": {
								"title": "nonce",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"to": {
								"title": "to address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"from": {
								"title": "from address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"gas": {
								"title": "gas limit",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"value": {
								"title": "value",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"input": {
								"title": "input data",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							"gasPrice": {
								"title": "gas price",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The gas price willing to be paid by the sender in wei"
							},
							"maxPriorityFeePerGas": {
								"title": "max priority fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
							},
							"maxFeePerGas": {
								"title": "max fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
							},
							"accessList": {
								"title": "accessList",
								"type": "array",
								"description": "EIP-2930 access list",
								"items": {
									"title": "Access list entry",
									"type": "object",
									"properties": {
										"address": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9,a-f,A-F]{40}$"
										},
										"storageKeys": {
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
											}
										}
									}
								}
							},
							"chainId": {
								"title": "chainId",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Chain ID that this transaction is valid on."
							}
						}
					}
				}
			],
			"result": {
				"name": "Encoded transaction",
				"schema": {
					"title": "hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]*$"
				}
			}
		},
		{
			"name": "eth_getBalance",
			"summary": "Returns the balance of the account of given address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Balance",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_getStorageAt",
			"summary": "Returns the value from a storage position at a given address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				},
				{
					"name": "Storage slot",
					"required": true,
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x[0-9a-f]{0,64}$"
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Value",
				"schema": {
					"title": "hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]*$"
				}
			}
		},
		{
			"name": "eth_getTransactionCount",
			"summary": "Returns the number of transactions sent from an address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Transaction count",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			}
		},
		{
			"name": "eth_getCode",
			"summary": "Returns code at a given address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				},
				{
					"name": "Block",
					"required": false,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Bytecode",
				"schema": {
					"title": "hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]*$"
				}
			}
		},
		{
			"name": "eth_getProof",
			"summary": "Returns the merkle proof for a given account and optionally some storage keys.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9,a-f,A-F]{40}$"
					}
				},
				{
					"name": "StorageKeys",
					"required": true,
					"schema": {
						"title": "Storage keys",
						"type": "array",
						"items": {
							"title": "32 byte hex value",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						}
					}
				},
				{
					"name": "Block",
					"required": true,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Account",
				"schema": {
					"title": "Account proof",
					"type": "object",
					"required": [
						"address",
						"accountProof",
						"balance",
						"codeHash",
						"nonce",
						"storageHash",
						"storageProof"
					],
					"properties": {
						"address": {
							"title": "address",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"accountProof": {
							"title": "accountProof",
							"type": "array",
							"items": {
								"title": "hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							}
						},
						"balance": {
							"title": "balance",
							"type": "string",
							"pattern": "^0x[0-9a-f]{0,64}$"
						},
						"codeHash": {
							"title": "codeHash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"nonce": {
							"title": "nonce",
							"type": "string",
							"pattern": "^0x([1-9a-f][0-9a-f]{0,15})|0$"
						},
						"storageHash": {
							"title": "storageHash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"storageProof": {
							"title": "storageProof",
							"type": "array",
							"items": {
								"title": "Storage proof",
								"type": "object",
								"required": [
									"key",
									"value",
									"proof"
								],
								"properties": {
									"key": {
										"title": "key",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"value": {
										"title": "value",
										"type": "string",
										"pattern": "^0x[0-9a-f]{0,64}$"
									},
									"proof": {
										"title": "proof",
										"type": "array",
										"items": {
											"title": "hex encoded bytes",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		{
			"name": "eth_sendTransaction",
			"summary": "Signs and submits a transaction.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"schema": {
						"type": "object",
						"title": "Transaction object generic to all types",
						"properties": {
							"type": {
								"title": "type",
								"type": "string",
								"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
							},
							"nonce": {
								"title": "nonce",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"to": {
								"title": "to address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"from": {
								"title": "from address",
								"type": "string",
								"pattern": "^0x[0-9,a-f,A-F]{40}$"
							},
							"gas": {
								"title": "gas limit",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"value": {
								"title": "value",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"input": {
								"title": "input data",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							"gasPrice": {
								"title": "gas price",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The gas price willing to be paid by the sender in wei"
							},
							"maxPriorityFeePerGas": {
								"title": "max priority fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
							},
							"maxFeePerGas": {
								"title": "max fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
							},
							"accessList": {
								"title": "accessList",
								"type": "array",
								"description": "EIP-2930 access list - will be ignored",
								"items": {
									"title": "Access list entry",
									"type": "object",
									"properties": {
										"address": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9,a-f,A-F]{40}$"
										},
										"storageKeys": {
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
											}
										}
									}
								}
							},
							"chainId": {
								"title": "chainId",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Chain ID that this transaction is valid on."
							}
						}
					}
				}
			],
			"result": {
				"name": "Transaction hash",
				"schema": {
					"title": "32 byte hex value",
					"type": "string",
					"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
				}
			}
		},
		{
			"name": "eth_sendRawTransaction",
			"summary": "Submits a raw transaction.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"schema": {
						"title": "hex encoded bytes",
						"type": "string",
						"pattern": "^0x[0-9a-f]*$"
					}
				}
			],
			"result": {
				"name": "Transaction hash",
				"schema": {
					"title": "32 byte hex value",
					"type": "string",
					"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
				}
			}
		},
		{
			"name": "eth_getTransactionByHash",
			"summary": "Returns the information about a transaction requested by transaction hash.",
			"params": [
				{
					"name": "Transaction hash",
					"required": true,
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
					}
				}
			],
			"result": {
				"name": "Transaction information",
				"schema": {
					"type": "object",
					"title": "Transaction information",
					"required": [
						"blockHash",
						"blockNumber",
						"from",
						"hash",
						"transactionIndex"
					],
					"oneOf": [
						{
							"title": "Signed 1559 Transaction",
							"type": "object",
							"required": [
								"accessList",
								"chainId",
								"gas",
								"input",
								"maxFeePerGas",
								"maxPriorityFeePerGas",
								"nonce",
								"r",
								"s",
								"type",
								"value",
								"yParity"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"maxPriorityFeePerGas": {
									"title": "max priority fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
								},
								"maxFeePerGas": {
									"title": "max fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
								},
								"accessList": {
									"title": "accessList",
									"type": "array",
									"description": "EIP-2930 access list",
									"items": {
										"title": "Access list entry",
										"type": "object",
										"properties": {
											"address": {
												"title": "hex encoded address",
												"type": "string",
												"pattern": "^0x[0-9,a-f,A-F]{40}$"
											},
											"storageKeys": {
												"type": "array",
												"items": {
													"title": "32 byte hex value",
													"type": "string",
													"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
												}
											}
										}
									}
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"yParity": {
									"title": "yParity",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						},
						{
							"title": "Signed 2930 Transaction",
							"type": "object",
							"required": [
								"accessList",
								"chainId",
								"gas",
								"gasPrice",
								"input",
								"nonce",
								"r",
								"s",
								"type",
								"value",
								"yParity"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"gasPrice": {
									"title": "gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The gas price willing to be paid by the sender in wei"
								},
								"accessList": {
									"title": "accessList",
									"type": "array",
									"description": "EIP-2930 access list",
									"items": {
										"title": "Access list entry",
										"type": "object",
										"properties": {
											"address": {
												"title": "hex encoded address",
												"type": "string",
												"pattern": "^0x[0-9,a-f,A-F]{40}$"
											},
											"storageKeys": {
												"type": "array",
												"items": {
													"title": "32 byte hex value",
													"type": "string",
													"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
												}
											}
										}
									}
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"yParity": {
									"title": "yParity",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						},
						{
							"title": "Signed Legacy Transaction",
							"type": "object",
							"required": [
								"gas",
								"gasPrice",
								"input",
								"nonce",
								"r",
								"s",
								"type",
								"v",
								"value"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"gasPrice": {
									"title": "gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The gas price willing to be paid by the sender in wei"
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"v": {
									"title": "v",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						}
					],
					"properties": {
						"blockHash": {
							"title": "block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"blockNumber": {
							"title": "block number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"from": {
							"title": "from address",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"hash": {
							"title": "transaction hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionIndex": {
							"title": "transaction index",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						}
					}
				}
			}
		},
		{
			"name": "eth_getTransactionByBlockHashAndIndex",
			"summary": "Returns information about a transaction by block hash and transaction index position.",
			"params": [
				{
					"name": "Block hash",
					"required": true,
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
					}
				},
				{
					"name": "Transaction index",
					"required": true,
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			],
			"result": {
				"name": "Transaction information",
				"schema": {
					"type": "object",
					"title": "Transaction information",
					"required": [
						"blockHash",
						"blockNumber",
						"from",
						"hash",
						"transactionIndex"
					],
					"oneOf": [
						{
							"title": "Signed 1559 Transaction",
							"type": "object",
							"required": [
								"accessList",
								"chainId",
								"gas",
								"input",
								"maxFeePerGas",
								"maxPriorityFeePerGas",
								"nonce",
								"r",
								"s",
								"type",
								"value",
								"yParity"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"maxPriorityFeePerGas": {
									"title": "max priority fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
								},
								"maxFeePerGas": {
									"title": "max fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
								},
								"accessList": {
									"title": "accessList",
									"type": "array",
									"description": "EIP-2930 access list",
									"items": {
										"title": "Access list entry",
										"type": "object",
										"properties": {
											"address": {
												"title": "hex encoded address",
												"type": "string",
												"pattern": "^0x[0-9,a-f,A-F]{40}$"
											},
											"storageKeys": {
												"type": "array",
												"items": {
													"title": "32 byte hex value",
													"type": "string",
													"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
												}
											}
										}
									}
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"yParity": {
									"title": "yParity",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						},
						{
							"title": "Signed 2930 Transaction",
							"type": "object",
							"required": [
								"accessList",
								"chainId",
								"gas",
								"gasPrice",
								"input",
								"nonce",
								"r",
								"s",
								"type",
								"value",
								"yParity"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"gasPrice": {
									"title": "gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The gas price willing to be paid by the sender in wei"
								},
								"accessList": {
									"title": "accessList",
									"type": "array",
									"description": "EIP-2930 access list",
									"items": {
										"title": "Access list entry",
										"type": "object",
										"properties": {
											"address": {
												"title": "hex encoded address",
												"type": "string",
												"pattern": "^0x[0-9,a-f,A-F]{40}$"
											},
											"storageKeys": {
												"type": "array",
												"items": {
													"title": "32 byte hex value",
													"type": "string",
													"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
												}
											}
										}
									}
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"yParity": {
									"title": "yParity",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						},
						{
							"title": "Signed Legacy Transaction",
							"type": "object",
							"required": [
								"gas",
								"gasPrice",
								"input",
								"nonce",
								"r",
								"s",
								"type",
								"v",
								"value"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"gasPrice": {
									"title": "gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The gas price willing to be paid by the sender in wei"
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"v": {
									"title": "v",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						}
					],
					"properties": {
						"blockHash": {
							"title": "block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"blockNumber": {
							"title": "block number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"from": {
							"title": "from address",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"hash": {
							"title": "transaction hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionIndex": {
							"title": "transaction index",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						}
					}
				}
			}
		},
		{
			"name": "eth_getTransactionByBlockNumberAndIndex",
			"summary": "Returns information about a transaction by block number and transaction index position.",
			"params": [
				{
					"name": "Block",
					"required": true,
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				},
				{
					"name": "Transaction index",
					"required": true,
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			],
			"result": {
				"name": "Transaction information",
				"schema": {
					"type": "object",
					"title": "Transaction information",
					"required": [
						"blockHash",
						"blockNumber",
						"from",
						"hash",
						"transactionIndex"
					],
					"oneOf": [
						{
							"title": "Signed 1559 Transaction",
							"type": "object",
							"required": [
								"accessList",
								"chainId",
								"gas",
								"input",
								"maxFeePerGas",
								"maxPriorityFeePerGas",
								"nonce",
								"r",
								"s",
								"type",
								"value",
								"yParity"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"maxPriorityFeePerGas": {
									"title": "max priority fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
								},
								"maxFeePerGas": {
									"title": "max fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
								},
								"accessList": {
									"title": "accessList",
									"type": "array",
									"description": "EIP-2930 access list - not supported",
									"items": {
										"title": "Access list entry",
										"type": "object",
										"properties": {
											"address": {
												"title": "hex encoded address",
												"type": "string",
												"pattern": "^0x[0-9,a-f,A-F]{40}$"
											},
											"storageKeys": {
												"type": "array",
												"items": {
													"title": "32 byte hex value",
													"type": "string",
													"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
												}
											}
										}
									}
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"yParity": {
									"title": "yParity",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						},
						{
							"title": "Signed 2930 Transaction",
							"type": "object",
							"required": [
								"accessList",
								"chainId",
								"gas",
								"gasPrice",
								"input",
								"nonce",
								"r",
								"s",
								"type",
								"value",
								"yParity"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"gasPrice": {
									"title": "gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The gas price willing to be paid by the sender in wei"
								},
								"accessList": {
									"title": "accessList",
									"type": "array",
									"description": "EIP-2930 access list - not supported",
									"items": {
										"title": "Access list entry",
										"type": "object",
										"properties": {
											"address": {
												"title": "hex encoded address",
												"type": "string",
												"pattern": "^0x[0-9,a-f,A-F]{40}$"
											},
											"storageKeys": {
												"type": "array",
												"items": {
													"title": "32 byte hex value",
													"type": "string",
													"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
												}
											}
										}
									}
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"yParity": {
									"title": "yParity",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						},
						{
							"title": "Signed Legacy Transaction",
							"type": "object",
							"required": [
								"gas",
								"gasPrice",
								"input",
								"nonce",
								"r",
								"s",
								"type",
								"v",
								"value"
							],
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9,a-f,A-F]?){1,2}$"
								},
								"nonce": {
									"title": "nonce",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"to": {
									"title": "to address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								"gas": {
									"title": "gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"value": {
									"title": "value",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"input": {
									"title": "input data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"gasPrice": {
									"title": "gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The gas price willing to be paid by the sender in wei"
								},
								"chainId": {
									"title": "chainId",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Chain ID that this transaction is valid on."
								},
								"v": {
									"title": "v",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"r": {
									"title": "r",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"s": {
									"title": "s",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						}
					],
					"properties": {
						"blockHash": {
							"title": "block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"blockNumber": {
							"title": "block number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"from": {
							"title": "from address",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"hash": {
							"title": "transaction hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionIndex": {
							"title": "transaction index",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						}
					}
				}
			}
		},
		{
			"name": "eth_getTransactionReceipt",
			"summary": "Returns the receipt of a transaction by transaction hash.",
			"params": [
				{
					"name": "Transaction hash",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
					}
				}
			],
			"result": {
				"name": "Receipt Information",
				"schema": {
					"type": "object",
					"title": "Receipt info",
					"required": [
						"blockHash",
						"blockNumber",
						"from",
						"cumulativeGasUsed",
						"gasUsed",
						"logs",
						"logsBloom",
						"transactionHash",
						"transactionIndex",
						"effectiveGasPrice"
					],
					"properties": {
						"transactionHash": {
							"title": "transaction hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"transactionIndex": {
							"title": "transaction index",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"blockHash": {
							"title": "block hash",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
						},
						"blockNumber": {
							"title": "block number",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						},
						"from": {
							"title": "from",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$"
						},
						"to": {
							"title": "to",
							"type": "string",
							"pattern": "^0x[0-9,a-f,A-F]{40}$",
							"description": "Address of the receiver or null in a contract creation transaction."
						},
						"cumulativeGasUsed": {
							"title": "cumulative gas used",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
							"description": "The sum of gas used by this transaction and all preceding transactions in the same block."
						},
						"gasUsed": {
							"title": "gas used",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
							"description": "The amount of gas used for this specific transaction alone."
						},
						"contractAddress": {
							"title": "contract address",
							"description": "The contract address created, if the transaction was a contract creation, otherwise null.",
							"oneOf": [
								{
									"title": "hex encoded address",
									"type": "string",
									"pattern": "^0x[0-9,a-f,A-F]{40}$"
								},
								{
									"name": null,
									"type": "null"
								}
							]
						},
						"logs": {
							"title": "logs",
							"type": "array",
							"items": {
								"title": "log",
								"type": "object",
								"required": [
									"transactionHash"
								],
								"properties": {
									"removed": {
										"title": "removed",
										"type": "boolean"
									},
									"logIndex": {
										"title": "log index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionIndex": {
										"title": "transaction index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionHash": {
										"title": "transaction hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockHash": {
										"title": "block hash",
										"type": "string",
										"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
									},
									"blockNumber": {
										"title": "block number",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"address": {
										"title": "address",
										"type": "string",
										"pattern": "^0x[0-9,a-f,A-F]{40}$"
									},
									"data": {
										"title": "data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"topics": {
										"title": "topics",
										"type": "array",
										"items": {
											"title": "32 hex encoded bytes",
											"type": "string",
											"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$"
										}
									}
								}
							}
						},
						"logsBloom": {
							"title": "logs bloom",
							"type": "string",
							"pattern": "^0x[0-9a-f]{512}$"
						},
						"root": {
							"title": "state root",
							"type": "string",
							"pattern": "^0x([0-9a-f][0-9a-f]){0,32}$",
							"description": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade."
						},
						"status": {
							"title": "status",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
							"description": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade."
						},
						"effectiveGasPrice": {
							"title": "effective gas price",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
							"description": "The actual value per gas deducted from the senders account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas)."
						}
					}
				}
			}
		}
	],
	"components": {}
}